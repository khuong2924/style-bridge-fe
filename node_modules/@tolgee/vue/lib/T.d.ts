import { TranslateParams, TranslateProps, TranslationKey } from '@tolgee/web';
import type { PropType } from 'vue';
export declare const T: import("vue").DefineComponent<{
    keyName: {
        type: PropType<TranslationKey>;
        required: true;
    };
    params: PropType<TranslateParams<import("@tolgee/web").DefaultParamType>>;
    defaultValue: PropType<string>;
    noWrap: {
        type: BooleanConstructor;
        default: boolean;
    };
    ns: {
        type: PropType<string>;
    };
    language: {
        type: PropType<string>;
    };
}, {
    t: import("vue").Ref<(props: TranslateProps<any, TranslationKey>) => any>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    keyName: {
        type: PropType<TranslationKey>;
        required: true;
    };
    params: PropType<TranslateParams<import("@tolgee/web").DefaultParamType>>;
    defaultValue: PropType<string>;
    noWrap: {
        type: BooleanConstructor;
        default: boolean;
    };
    ns: {
        type: PropType<string>;
    };
    language: {
        type: PropType<string>;
    };
}>>, {
    noWrap: boolean;
}>;
