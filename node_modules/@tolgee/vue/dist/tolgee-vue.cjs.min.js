"use strict";var e=require("vue"),t=require("@tolgee/web");const o=e.defineComponent({name:"TolgeeProvider",props:{tolgee:{type:Object,required:!1},fallback:{type:[Object,String]},ssr:{type:[Object,Boolean],required:!1}},setup(t){const o=e.inject("tolgeeContext");t.tolgee&&(o.value.tolgee=t.tolgee);const n=e.computed((()=>o.value.tolgee));if(!n.value)throw new Error("Tolgee instance not provided");if(o.value.isInitialRender&&Boolean(t.ssr)){const e="object"==typeof t.ssr?t.ssr:{};if(n.value.setEmitterActive(!1),n.value.addStaticData(e.staticData),n.value.changeLanguage(e.language),n.value.setEmitterActive(!0),!n.value.isLoaded()){const t=n.value.getRequiredDescriptors(e.language).map((({namespace:e,language:t})=>e?`${e}:${t}`:t)).filter((t=>{var o;return!(null===(o=e.staticData)||void 0===o?void 0:o[t])}));console.warn(`Tolgee: Missing records in "staticData" for proper SSR functionality: ${t.map((e=>`"${e}"`)).join(", ")}`)}}e.onMounted((()=>{o.value.isInitialRender=!1}));const a=e.ref(!n.value.isLoaded());return e.onBeforeMount((()=>{n.value.run().finally((()=>{a.value=!1}))})),e.onUnmounted((()=>{n.value.stop()})),{isLoading:a}},render(){var e,t,o,n;return this.isLoading?(null===(n=(o=this.$slots).fallback)||void 0===n?void 0:n.call(o))||this.fallback||null:null===(t=(e=this.$slots).default)||void 0===t?void 0:t.call(e)}}),n=o=>{const n=t.getFallback(o),a=e.inject("tolgeeContext"),s=e.computed((()=>a.value.tolgee));if(!s.value)throw new Error("Tolgee instance not provided");const l=e.ref(u()),r=s.value.on("update",(()=>{l.value=u(),i.value=!s.value.isLoaded(n)}));s.value.addActiveNs(n),e.onUnmounted((()=>{null==r||r.unsubscribe(),s.value.removeActiveNs(n)}));const i=e.ref(!s.value.isLoaded(n));function u(){return e=>{var t;const o=null!==(t=e.ns)&&void 0!==t?t:null==n?void 0:n[0];return s.value.t(Object.assign(Object.assign({},e),{ns:o}))}}return{t:l,isLoading:i}},a=e.defineComponent({name:"T",props:{keyName:{type:String,required:!0},params:Object,defaultValue:String,noWrap:{type:Boolean,default:!1},ns:{type:String},language:{type:String}},setup(){const{t:e}=n();return{t:e}},render(){const e={};Object.keys(this.$slots).forEach((t=>{e[t]=this.$slots[t]()}));const t=Object.assign({},this.$props.params,e),o={key:this.$props.keyName,params:t,defaultValue:this.$props.defaultValue,noWrap:this.$props.noWrap,ns:this.$props.ns,language:this.$props.language};return this.t(o)}}),s={install(o,n){const a=null==n?void 0:n.tolgee;if(!a)throw new Error("Tolgee instance not passed in options");const s=Boolean(null==n?void 0:n.enableSSR),l=e.ref({tolgee:a,isInitialRender:s});if(o.provide("tolgeeContext",l),s){const o=()=>Object.assign(Object.assign({},l.value.tolgee),{t:(...e)=>{const o=t.getTranslateProps(...e);return a.t(Object.assign({},o))}}),n=()=>Object.assign(Object.assign({},l.value.tolgee),{t:(...e)=>{const o=t.getTranslateProps(...e);return a.t(Object.assign(Object.assign({},o),{noWrap:!0}))}});l.value.tolgee=n(),e.watch((()=>l.value.isInitialRender),(e=>{e||(l.value.tolgee=o())}))}l.value.tolgee.on("cache",(()=>{l.value.tolgee=Object.freeze(Object.assign({},l.value.tolgee))})),o.config.globalProperties.$t=(...e)=>l.value.tolgee.t(...e),o.config.globalProperties.$tolgee=l.value.tolgee}};exports.GlobalContextPlugin=()=>e=>e,exports.T=a,exports.TolgeeProvider=o,exports.VueTolgee=s,exports.useTolgee=t=>{const o=e.getCurrentInstance(),n=e.inject("tolgeeContext"),a=e.computed((()=>n.value.tolgee)),s=null==t?void 0:t.map((e=>a.value.on(e,(()=>{n.value.tolgee=Object.freeze(Object.assign({},a.value)),o.proxy.$forceUpdate()}))));return e.onUnmounted((()=>{null==s||s.forEach((e=>e.unsubscribe()))})),a},exports.useTranslate=o=>{const{t:a,isLoading:s}=n(o);return{t:e.computed((()=>(...e)=>{const o=t.getTranslateProps(...e);return a.value(o)})),isLoading:s}},Object.keys(t).forEach((function(e){"default"===e||exports.hasOwnProperty(e)||Object.defineProperty(exports,e,{enumerable:!0,get:function(){return t[e]}})}));
//# sourceMappingURL=tolgee-vue.cjs.min.js.map
